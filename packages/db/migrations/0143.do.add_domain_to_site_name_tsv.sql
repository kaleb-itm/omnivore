-- Type: DO
-- Name: add_domain_to_site_name_tsv
-- Description: Convert domain to tsvector and add it to site_name_tsv column

BEGIN;

CREATE OR REPLACE FUNCTION update_library_item_tsv() RETURNS trigger AS $$
begin
    new.content_tsv := to_tsvector('pg_catalog.english', coalesce(new.readable_content, ''));
    new.site_name_tsv := to_tsvector('pg_catalog.english', coalesce(new.site_name, '')) ||
        -- domain (eg omnivore.app)
        to_tsvector('pg_catalog.english', coalesce(regexp_replace(new.original_url, '^((http[s]?):\/)?\/?(.*\.)?(([^:\/\s]+)\.[^:\/\s]+)(.*)$', '\4'), '')) ||
        -- secondary hostname (eg omnivore)
        to_tsvector('pg_catalog.english', coalesce(regexp_replace(new.original_url, '^((http[s]?):\/)?\/?(.*\.)?(([^:\/\s]+)\.[^:\/\s]+)(.*)$', '\5'), ''));
    new.title_tsv := to_tsvector('pg_catalog.english', coalesce(new.title, ''));
    new.author_tsv := to_tsvector('pg_catalog.english', coalesce(new.author, ''));
    new.description_tsv := to_tsvector('pg_catalog.english', coalesce(new.description, ''));
    -- note_tsv is generated by both note and highlight_annotations
    new.note_tsv := to_tsvector('pg_catalog.english', coalesce(new.note, '') || ' ' || array_to_string(new.highlight_annotations, ' '));
    new.search_tsv := 
        setweight(new.title_tsv, 'A') || 
        setweight(new.author_tsv, 'A') || 
        setweight(new.site_name_tsv, 'A') || 
        setweight(new.description_tsv, 'A') || 
        setweight(new.note_tsv, 'A') ||
        setweight(new.content_tsv, 'B');
    return new;
end
$$ LANGUAGE plpgsql;

COMMIT;
